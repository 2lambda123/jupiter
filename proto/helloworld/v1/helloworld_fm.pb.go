// Code generated by github.com/douyu/jupiter/cmd/protoc-gen-go-fieldmask. DO NOT EDIT.
// versions:
// - protoc-gen-go-fieldmask v0.11.2
// - protoc             (unknown)

package helloworldv1

import (
	xfieldmask "github.com/douyu/jupiter/pkg/util/xfieldmask"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the github.com/douyu/jupiter/cmd/protoc-gen-go-fieldmask package it is being compiled against.
var _ = fieldmaskpb.New
var _ = xfieldmask.New

func (x *SayGoodByeRequest) fieldMaskWithMode(mode xfieldmask.MaskMode) *SayGoodByeRequest_FieldMask {
	fm := &SayGoodByeRequest_FieldMask{
		maskMode: mode,
		maskIn:   xfieldmask.New(_fm_SayGoodByeRequestMaskIn),
		maskOut:  xfieldmask.New(_fm_SayGoodByeRequestMaskOut),
	}

	return fm
}

// FieldMask_Filter generates *SayGoodByeRequest FieldMask with filter mode, so that
// only the fields in the SayGoodByeRequest.UpdateMask will be
// appended into the SayGoodByeRequest.
func (x *SayGoodByeRequest) FieldMaskFilter() *SayGoodByeRequest_FieldMask {
	return x.fieldMaskWithMode(xfieldmask.MaskMode_Filter)
}

// FieldMask_Prune generates *SayGoodByeRequest FieldMask with prune mode, so that
// only the fields NOT in the SayGoodByeRequest.UpdateMask will be
// appended into the SayGoodByeRequest.
func (x *SayGoodByeRequest) FieldMaskPrune() *SayGoodByeRequest_FieldMask {
	return x.fieldMaskWithMode(xfieldmask.MaskMode_Prune)
}

// SayGoodByeRequest_FieldMask provide helper functions to deal with FieldMask.
type SayGoodByeRequest_FieldMask struct {
	maskMode xfieldmask.MaskMode
	maskIn   xfieldmask.NestedFieldMask
	maskOut  xfieldmask.NestedFieldMask
}

// _fm_SayGoodByeRequest is built in variable for SayGoodByeRequest to call FieldMask.Append
var _fm_SayGoodByeRequest = new(SayGoodByeRequest)
var _fm_SayGoodByeRequestMaskIn = make([]string, 0)

// MaskInName append Name into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskInName() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeRequest, "name")
	if err == nil {
		_fm_SayGoodByeRequestMaskIn = append(_fm_SayGoodByeRequestMaskIn, "name")
	}

	return x
}

// MaskedInName indicates the field Name exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedInName() bool {
	if x.maskIn == nil {
		return true
	}

	return x.maskIn.Masked("name")
}

// MaskInAge append Age into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskInAge() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeRequest, "age")
	if err == nil {
		_fm_SayGoodByeRequestMaskIn = append(_fm_SayGoodByeRequestMaskIn, "age")
	}

	return x
}

// MaskedInAge indicates the field Age exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedInAge() bool {
	if x.maskIn == nil {
		return true
	}

	return x.maskIn.Masked("age")
}

// MaskInType append Type into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskInType() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeRequest, "type")
	if err == nil {
		_fm_SayGoodByeRequestMaskIn = append(_fm_SayGoodByeRequestMaskIn, "type")
	}

	return x
}

// MaskedInType indicates the field Type exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedInType() bool {
	if x.maskIn == nil {
		return true
	}

	return x.maskIn.Masked("type")
}

// _fm_SayGoodByeResponse is built in variable for SayGoodByeResponse to call FieldMask.Append
var _fm_SayGoodByeResponse = new(SayGoodByeResponse)
var _fm_SayGoodByeRequestMaskOut = make([]string, 0)

// MaskOutError append Error into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskOutError() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeResponse, "error")
	if err == nil {
		_fm_SayGoodByeRequestMaskOut = append(_fm_SayGoodByeRequestMaskOut, "error")
	}

	return x
}

// MaskedOutError indicates the field Error exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedOutError() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("error")
}

// MaskOutMsg append Msg into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskOutMsg() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeResponse, "msg")
	if err == nil {
		_fm_SayGoodByeRequestMaskOut = append(_fm_SayGoodByeRequestMaskOut, "msg")
	}

	return x
}

// MaskedOutMsg indicates the field Msg exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedOutMsg() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("msg")
}

// MaskOutData append Data into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskOutData() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeResponse, "data")
	if err == nil {
		_fm_SayGoodByeRequestMaskOut = append(_fm_SayGoodByeRequestMaskOut, "data")
	}

	return x
}

// MaskedOutData indicates the field Data exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedOutData() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data")
}

// MaskOutDataAge append DataAge into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskOutDataAge() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeResponse, "data.age")
	if err == nil {
		_fm_SayGoodByeRequestMaskOut = append(_fm_SayGoodByeRequestMaskOut, "data.age")
	}

	return x
}

// MaskedOutDataAge indicates the field DataAge exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedOutDataAge() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.age")
}

// MaskOutDataName append DataName into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskOutDataName() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeResponse, "data.name")
	if err == nil {
		_fm_SayGoodByeRequestMaskOut = append(_fm_SayGoodByeRequestMaskOut, "data.name")
	}

	return x
}

// MaskedOutDataName indicates the field DataName exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedOutDataName() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.name")
}

// MaskOutDataOther append DataOther into SayGoodByeRequest.UpdateMask.
func (x *SayGoodByeRequest) MaskOutDataOther() *SayGoodByeRequest {
	if x.UpdateMask == nil {
		x.UpdateMask = new(fieldmaskpb.FieldMask)
	}
	err := x.UpdateMask.Append(_fm_SayGoodByeResponse, "data.other")
	if err == nil {
		_fm_SayGoodByeRequestMaskOut = append(_fm_SayGoodByeRequestMaskOut, "data.other")
	}

	return x
}

// MaskedOutDataOther indicates the field DataOther exists in the SayGoodByeRequest.UpdateMask or not.
func (x *SayGoodByeRequest_FieldMask) MaskedOutDataOther() bool {
	if x.maskOut == nil {
		return true
	}

	return x.maskOut.Masked("data.other")
}

// Mask only affects the fields in the SayGoodByeRequest.
func (x *SayGoodByeRequest_FieldMask) Mask(m *SayGoodByeResponse) *SayGoodByeResponse {
	switch x.maskMode {
	case xfieldmask.MaskMode_Filter:
		x.maskOut.Filter(m)
	case xfieldmask.MaskMode_Prune:
		x.maskOut.Prune(m)
	}

	return m
}
